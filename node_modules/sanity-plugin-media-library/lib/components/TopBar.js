"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TopBar = void 0;
var react_1 = __importDefault(require("react"));
var ui_1 = require("@sanity/ui");
var icons_1 = require("@sanity/icons");
var TopBar = function (_a) {
    var onSortChange = _a.onSortChange, searchQuery = _a.searchQuery, setSearchQuery = _a.setSearchQuery, setViewType = _a.setViewType, viewType = _a.viewType;
    return (react_1.default.createElement(ui_1.Flex, { padding: 3, justify: "space-between", align: "center", wrap: "wrap", gap: 3 },
        react_1.default.createElement(ui_1.Inline, { space: 2 },
            react_1.default.createElement(ui_1.Inline, { space: 2, style: { whiteSpace: 'nowrap' } },
                react_1.default.createElement(icons_1.UlistIcon, { style: { width: 18, height: 18 } }),
                react_1.default.createElement("label", { htmlFor: "detailsViewCheckbox" },
                    react_1.default.createElement(ui_1.Label, null,
                        viewType === 'grid' ? 'Show' : 'Hide',
                        " details")),
                react_1.default.createElement(ui_1.Switch, { id: "detailsViewCheckbox", onClick: function () { return setViewType(viewType === 'grid' ? 'list' : 'grid'); }, checked: viewType === 'list' }))),
        react_1.default.createElement(ui_1.Inline, { space: 3 },
            react_1.default.createElement("label", { htmlFor: "searchField" },
                react_1.default.createElement(icons_1.SearchIcon, { style: { width: 24, height: 24, marginRight: -6 } })),
            react_1.default.createElement(ui_1.TextInput, { id: "searchField", style: { width: 300 }, fontSize: [2], padding: [3], placeholder: "Search by filename, title, alt or tag", value: searchQuery, onChange: function (e) { return setSearchQuery(e.currentTarget.value); } }),
            react_1.default.createElement(ui_1.Select, { id: "sortSelect", fontSize: [2], padding: [3], space: [3, 3, 4], onChange: function (e) { return onSortChange(e.currentTarget.value); } },
                react_1.default.createElement("option", { value: "date" }, "Latest first"),
                react_1.default.createElement("option", { value: "az" }, "Filename A - Z"),
                react_1.default.createElement("option", { value: "za" }, "Filename Z - A")))));
};
exports.TopBar = TopBar;
